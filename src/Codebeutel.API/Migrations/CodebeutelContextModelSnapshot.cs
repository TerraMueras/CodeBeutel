// <auto-generated />
using Codebeutel.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Codebeutel.API.Migrations
{
    [DbContext(typeof(CodebeutelContext))]
    partial class CodebeutelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Codebeutel.API.Data.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("Codebeutel.API.Data.Models.Dispenser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDefect")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEmpty")
                        .HasColumnType("boolean");

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Dispenser", (string)null);
                });

            modelBuilder.Entity("Codebeutel.API.Data.Models.DogFriendlyPlace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("DogFriendlyPlace", (string)null);
                });

            modelBuilder.Entity("Codebeutel.API.Data.Models.NewDispenser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("NewDispenser", (string)null);
                });

            modelBuilder.Entity("Codebeutel.API.Data.Models.NewDispenserApproval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("NewDispenserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("NewDispenserId");

                    b.ToTable("NewDispenserApproval", (string)null);
                });

            modelBuilder.Entity("Codebeutel.API.Data.Models.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DispenserId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("DispenserId");

                    b.ToTable("Report", (string)null);
                });

            modelBuilder.Entity("Codebeutel.API.Data.Models.SuggestedDispenser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<bool>("NotificationSent")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("SuggestedDispenser", (string)null);
                });

            modelBuilder.Entity("Codebeutel.API.Data.Models.SuggestedDispenserApproval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("SuggestedDispenserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SuggestedDispenserId");

                    b.ToTable("SuggestedDispenserApproval", (string)null);
                });

            modelBuilder.Entity("Codebeutel.API.Data.Models.DogFriendlyPlace", b =>
                {
                    b.HasOne("Codebeutel.API.Data.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Codebeutel.API.Data.Models.NewDispenserApproval", b =>
                {
                    b.HasOne("Codebeutel.API.Data.Models.NewDispenser", null)
                        .WithMany("Approvals")
                        .HasForeignKey("NewDispenserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Codebeutel.API.Data.Models.Report", b =>
                {
                    b.HasOne("Codebeutel.API.Data.Models.Dispenser", null)
                        .WithMany("Reports")
                        .HasForeignKey("DispenserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Codebeutel.API.Data.Models.SuggestedDispenserApproval", b =>
                {
                    b.HasOne("Codebeutel.API.Data.Models.SuggestedDispenser", null)
                        .WithMany("Approvals")
                        .HasForeignKey("SuggestedDispenserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Codebeutel.API.Data.Models.Dispenser", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("Codebeutel.API.Data.Models.NewDispenser", b =>
                {
                    b.Navigation("Approvals");
                });

            modelBuilder.Entity("Codebeutel.API.Data.Models.SuggestedDispenser", b =>
                {
                    b.Navigation("Approvals");
                });
#pragma warning restore 612, 618
        }
    }
}
